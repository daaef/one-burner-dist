{"version":3,"sources":["../js/main.js"],"names":["x","i","j","l","ll","selElmnt","a","b","c","console","log","window","addEventListener","navArea","document","querySelector","pageYOffset","classList","add","remove","getElementsByClassName","length","getElementsByTagName","createElement","setAttribute","innerHTML","options","selectedIndex","appendChild","e","y","k","s","h","sl","yl","parentNode","previousSibling","removeAttribute","click","stopPropagation","closeAllSelect","nextSibling","toggle","elmnt","xl","arrNo","push","indexOf","selected","activeSelect","currentCode","optionsList","querySelectorAll","forEach","option","getAttribute"],"mappings":";AAcA,IAAIA,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAAUC,EAAGC,EAAGC,EAIpC,IAlBAC,QAAQC,IAAI,YAEZC,OAAOC,iBAAiB,SAAU,WAC5BC,IAAAA,EAAUC,SAASC,cAAc,OAEjCJ,OAAOK,YAAc,EACvBH,EAAQI,UAAUC,IAAI,aAEtBL,EAAQI,UAAUE,OAAO,eAS7BhB,GADAH,EAAIc,SAASM,uBAAuB,kBAC9BC,OACDpB,EAAI,EAAGA,EAAIE,EAAGF,IAAK,CAWjBC,IATLE,GADAC,EAAWL,EAAEC,GAAGqB,qBAAqB,UAAU,IACjCD,QAEdf,EAAIQ,SAASS,cAAc,QACzBC,aAAa,QAAS,mBACxBlB,EAAEmB,UAAYpB,EAASqB,QAAQrB,EAASsB,eAAeF,UACvDzB,EAAEC,GAAG2B,YAAYtB,IAEjBC,EAAIO,SAASS,cAAc,QACzBC,aAAa,QAAS,4BACnBtB,EAAI,EAAGA,EAAIE,EAAIF,KAGlBM,EAAIM,SAASS,cAAc,QACzBE,UAAYpB,EAASqB,QAAQxB,GAAGuB,UAClCjB,EAAEI,iBAAiB,QAAS,SAAUiB,GAGhCC,IAAAA,EAAG7B,EAAG8B,EAAGC,EAAGC,EAAGC,EAAIC,EAIlBlC,IAFLiC,GADAF,EAAI,KAAKI,WAAWA,WAAWd,qBAAqB,UAAU,IACvDD,OACPY,EAAI,KAAKG,WAAWC,gBACfpC,EAAI,EAAGA,EAAIiC,EAAIjC,IACd+B,GAAAA,EAAEN,QAAQzB,GAAGwB,YAAc,KAAKA,UAAW,CAKxCM,IAJLC,EAAEL,cAAgB1B,EAClBgC,EAAER,UAAY,KAAKA,UAEnBU,GADAL,EAAI,KAAKM,WAAWhB,uBAAuB,qBACpCC,OACFU,EAAI,EAAGA,EAAII,EAAIJ,IAClBD,EAAEC,GAAGO,gBAAgB,SAElBd,KAAAA,aAAa,QAAS,oBAC3B,MAGJS,EAAEM,UAEJhC,EAAEqB,YAAYpB,GAEhBR,EAAEC,GAAG2B,YAAYrB,GACjBD,EAAEM,iBAAiB,QAAS,SAAUiB,GAGpCA,EAAEW,kBACFC,EAAe,MACVC,KAAAA,YAAYzB,UAAU0B,OAAO,eAC7B1B,KAAAA,UAAU0B,OAAO,yBAG1B,SAASF,EAAeG,GAGlB5C,IAAAA,EACF8B,EACA7B,EACA4C,EACAV,EACAW,EAAQ,GAKL7C,IAJLD,EAAIc,SAASM,uBAAuB,gBACpCU,EAAIhB,SAASM,uBAAuB,mBACpCyB,EAAK7C,EAAEqB,OACPc,EAAKL,EAAET,OACFpB,EAAI,EAAGA,EAAIkC,EAAIlC,IACd2C,IAAUd,EAAE7B,GACd6C,EAAMC,KAAK9C,GAEX6B,EAAE7B,GAAGgB,UAAUE,OAAO,uBAGrBlB,IAAAA,EAAI,EAAGA,EAAI4C,EAAI5C,IACd6C,EAAME,QAAQ/C,IAChBD,EAAEC,GAAGgB,UAAUC,IAAI,eAMzBJ,SAASF,iBAAiB,QAAS6B,GAEnC,IAAMQ,EAAWnC,SAASC,cAAc,eAClCmC,EAAepC,SAASC,cAAc,mBACtCoC,EAAcrC,SAASC,cAAc,iBACrCqC,EAActC,SAASuC,iBAAiB,mBAE9CH,EAAatC,iBAAiB,QAAS,WAErCqC,EAAShC,UAAUC,IAAI,aAGzBkC,EAAYE,QAAQ,SAACC,GACnBA,EAAO3C,iBAAiB,QAAS,WAE/BsC,EACGnC,cAAc,OACdS,aAAa,MAAO+B,EAAOxC,cAAc,OAAOyC,aAAa,QAChEL,EAAY1B,UAAgB8B,IAAAA,OAAAA,EACzBxC,cAAc,OACdyC,aAAa,QAChBP,EAAShC,UAAUE,OAAO","file":"main.e3caadf1.js","sourceRoot":"..\\src\\html","sourcesContent":["console.log('it works');\r\n/*Sticky Navbar */\r\nwindow.addEventListener('scroll', function () {\r\n  let navArea = document.querySelector('nav');\r\n\r\n  if (window.pageYOffset > 0) {\r\n    navArea.classList.add('is-sticky');\r\n  } else {\r\n    navArea.classList.remove('is-sticky');\r\n  }\r\n});\r\n/*Sticky Navbar */\r\n\r\n/*Select code*/\r\nlet x, i, j, l, ll, selElmnt, a, b, c;\r\n/*look for any elements with the class \"custom-select\":*/\r\nx = document.getElementsByClassName('custom-select');\r\nl = x.length;\r\nfor (i = 0; i < l; i++) {\r\n  selElmnt = x[i].getElementsByTagName('select')[0];\r\n  ll = selElmnt.length;\r\n  /*for each element, create a new DIV that will act as the selected item:*/\r\n  a = document.createElement('DIV');\r\n  a.setAttribute('class', 'select-selected');\r\n  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\r\n  x[i].appendChild(a);\r\n  /*for each element, create a new DIV that will contain the option list:*/\r\n  b = document.createElement('DIV');\r\n  b.setAttribute('class', 'select-items select-hide');\r\n  for (j = 1; j < ll; j++) {\r\n    /*for each option in the original select element,\r\n    create a new DIV that will act as an option item:*/\r\n    c = document.createElement('DIV');\r\n    c.innerHTML = selElmnt.options[j].innerHTML;\r\n    c.addEventListener('click', function (e) {\r\n      /*when an item is clicked, update the original select box,\r\n        and the selected item:*/\r\n      var y, i, k, s, h, sl, yl;\r\n      s = this.parentNode.parentNode.getElementsByTagName('select')[0];\r\n      sl = s.length;\r\n      h = this.parentNode.previousSibling;\r\n      for (i = 0; i < sl; i++) {\r\n        if (s.options[i].innerHTML === this.innerHTML) {\r\n          s.selectedIndex = i;\r\n          h.innerHTML = this.innerHTML;\r\n          y = this.parentNode.getElementsByClassName('same-as-selected');\r\n          yl = y.length;\r\n          for (k = 0; k < yl; k++) {\r\n            y[k].removeAttribute('class');\r\n          }\r\n          this.setAttribute('class', 'same-as-selected');\r\n          break;\r\n        }\r\n      }\r\n      h.click();\r\n    });\r\n    b.appendChild(c);\r\n  }\r\n  x[i].appendChild(b);\r\n  a.addEventListener('click', function (e) {\r\n    /*when the select box is clicked, close any other select boxes,\r\n      and open/close the current select box:*/\r\n    e.stopPropagation();\r\n    closeAllSelect(this);\r\n    this.nextSibling.classList.toggle('select-hide');\r\n    this.classList.toggle('select-arrow-active');\r\n  });\r\n}\r\nfunction closeAllSelect(elmnt) {\r\n  /*a function that will close all select boxes in the document,\r\n  except the current select box:*/\r\n  var x,\r\n    y,\r\n    i,\r\n    xl,\r\n    yl,\r\n    arrNo = [];\r\n  x = document.getElementsByClassName('select-items');\r\n  y = document.getElementsByClassName('select-selected');\r\n  xl = x.length;\r\n  yl = y.length;\r\n  for (i = 0; i < yl; i++) {\r\n    if (elmnt === y[i]) {\r\n      arrNo.push(i);\r\n    } else {\r\n      y[i].classList.remove('select-arrow-active');\r\n    }\r\n  }\r\n  for (i = 0; i < xl; i++) {\r\n    if (arrNo.indexOf(i)) {\r\n      x[i].classList.add('select-hide');\r\n    }\r\n  }\r\n}\r\n/*if the user clicks anywhere outside the select box,\r\nthen close all select boxes:*/\r\ndocument.addEventListener('click', closeAllSelect);\r\n/*Select code*/\r\nconst selected = document.querySelector('.my--select');\r\nconst activeSelect = document.querySelector('.active--select');\r\nconst currentCode = document.querySelector('.current-code');\r\nconst optionsList = document.querySelectorAll('.select--option');\r\n\r\nactiveSelect.addEventListener('click', () => {\r\n  // optionsContainer.classList.toggle('active');\r\n  selected.classList.add('clicked');\r\n});\r\n\r\noptionsList.forEach((option) => {\r\n  option.addEventListener('click', () => {\r\n    // selected.innerHTML = option.querySelector('label').innerHTML;\r\n    activeSelect\r\n      .querySelector('img')\r\n      .setAttribute('src', option.querySelector('img').getAttribute('src'));\r\n    currentCode.innerHTML = `+${option\r\n      .querySelector('img')\r\n      .getAttribute('alt')}`;\r\n    selected.classList.remove('clicked');\r\n  });\r\n});\r\n"]}